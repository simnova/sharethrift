type ItemListing implements MongoBase {
  sharer: String!
  title: String!
  description: String!
  category: String!
  location: String!
  sharingPeriodStart: DateTime!
  sharingPeriodEnd: DateTime!
  state: ItemListingState
  
  sharingHistory: [String!]
  reports: Int
  images: [String!] # Array of image URLs

  id: ObjectID!
  schemaVersion: String
  createdAt: DateTime
  updatedAt: DateTime
  version: Int
}

 
enum ItemListingState {
  Published
  Paused
  Cancelled
  Drafted
  Expired
  Blocked
  Appeal_Requested
}

# Page types for My Listings Dashboard
type ListingAllPage {
  items: [ListingAll!]!
  total: Int!
  page: Int!
  pageSize: Int!
}

type ListingRequestPage {
  items: [ListingRequest!]!
  total: Int!
  page: Int!
  pageSize: Int!
}

# Listing types for dashboard
type ListingAll {
  id: ID!
  title: String!
  image: String
  publishedAt: String
  reservationPeriod: String
  status: String!
  pendingRequestsCount: Int!
}

type ListingRequest {
  id: ID!
  title: String!
  image: String
  requestedBy: String!
  requestedOn: String!
  reservationPeriod: String!
  status: String!
}

input SorterInput {
  field: String!
  order: String!
}

extend type Query {
  itemListings: [ItemListing!]!
  itemListing(id: ObjectID!): ItemListing
  myListingsAll(page: Int!, pageSize: Int!, searchText: String, statusFilters: [String!], sorter: SorterInput): ListingAllPage!
  myListingsRequests(page: Int!, pageSize: Int!): ListingRequestPage!
}