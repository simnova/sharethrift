"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8130],{7735:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"emulator-blog-post","metadata":{"permalink":"/blog/emulator-blog-post","editUrl":"https://github.com/simnova/sharethrift/tree/main/packages/docs/blog/2025-09-11-emulator-blog-post.md","source":"@site/blog/2025-09-11-emulator-blog-post.md","title":"Introducing Local Emulators","description":"When working on Sharethrift, we discovered the need to have local and emulated versions of some of our needed external services, such as mongodb and authorization, and payment.","date":"2025-09-11T00:00:00.000Z","tags":[{"inline":false,"label":"Sharethrift","permalink":"/blog/tags/sharethrift","description":"Posts about the Sharethrift framework, architecture, and development practices"}],"readingTime":0.39,"hasTruncateMarker":true,"authors":[{"name":"Jason Morais","title":"Sharethrift core team","url":"https://www.linkedin.com/in/jason-morais-06b629164","socials":{"linkedin":"https://www.linkedin.com/in/jason-morais-06b629164/","github":"https://github.com/jasonmorais"},"imageURL":"https://github.com/jasonmorais.png","key":"jasonmorais","page":null}],"frontMatter":{"slug":"emulator-blog-post","title":"Introducing Local Emulators","authors":["jasonmorais"],"tags":["sharethrift"]},"unlisted":false,"nextItem":{"title":"Welcome to Sharethrift","permalink":"/blog/welcome"}},"content":"When working on Sharethrift, we discovered the need to have local and emulated versions of some of our needed external services, such as mongodb and authorization, and payment.\\n\\n\x3c!-- truncate --\x3e\\n\\nTo solve this, we incorporated local alternatives built into the project that will be referenced instead when running the project locally. This way we have seemless transitioning between local and deployed builds, so that we can develop without needing to do weird work arounds to run our project."},{"id":"welcome","metadata":{"permalink":"/blog/welcome","editUrl":"https://github.com/simnova/sharethrift/tree/main/packages/docs/blog/2025-08-26-welcome/index.md","source":"@site/blog/2025-08-26-welcome/index.md","title":"Welcome to Sharethrift","description":"Sharethrift documentation features are designed to help developers understand and implement Domain-Driven Design patterns with Azure Functions and modern web technologies.","date":"2025-08-26T00:00:00.000Z","tags":[{"inline":false,"label":"Hello","permalink":"/blog/tags/hello","description":"Welcome posts and introductory content for new readers"},{"inline":false,"label":"Sharethrift","permalink":"/blog/tags/sharethrift","description":"Posts about the Sharethrift framework, architecture, and development practices"}],"readingTime":0.64,"hasTruncateMarker":true,"authors":[{"name":"Patrick Gidich","title":"Sharethrift maintainer","url":"https://www.simnova.com","page":{"permalink":"/blog/authors/all-patrick-gidich-articles"},"socials":{"x":"https://x.com/simnova","linkedin":"https://www.linkedin.com/in/gidich/","github":"https://github.com/gidich","newsletter":"https://www.simnova.com"},"imageURL":"https://github.com/gidich.png","key":"gidich"}],"frontMatter":{"slug":"welcome","title":"Welcome to Sharethrift","authors":["gidich"],"tags":["hello","sharethrift"]},"unlisted":false,"prevItem":{"title":"Introducing Local Emulators","permalink":"/blog/emulator-blog-post"},"nextItem":{"title":"Bounded Contexts","permalink":"/blog/mdx-blog-post"}},"content":"Sharethrift documentation features are designed to help developers understand and implement Domain-Driven Design patterns with Azure Functions and modern web technologies.\\n\\nHere are a few tips to get you started with Sharethrift development.\\n\\n\x3c!-- truncate --\x3e\\n\\nSimply explore the `packages` directory to understand the modular architecture.\\n\\nRegular contributors can be added to the team through our development workflow.\\n\\nThe project follows semantic versioning and clear release cycles:\\n\\n- Architecture Decision Records (ADRs) document key decisions\\n- Domain contexts are organized under `packages/api-domain/src/domain/contexts/`\\n\\nSharethrift provides comprehensive examples for DDD implementation:\\n\\n![Sharethrift Architecture](./sharethrift-architecture-banner.jpg)\\n\\nThe documentation supports categorized content as well!\\n\\n**Getting Started**: Clone the repository, run `npm run clean && npm install && npm run build`, then use `npm run dev` to start the full development environment."},{"id":"mdx-blog-post","metadata":{"permalink":"/blog/mdx-blog-post","editUrl":"https://github.com/simnova/sharethrift/tree/main/packages/docs/blog/2025-08-01-mdx-blog-post.mdx","source":"@site/blog/2025-08-01-mdx-blog-post.mdx","title":"Bounded Contexts","description":"Sharethrift implements Domain-Driven Design through well-defined bounded contexts that separate different business concerns. Each context maintains its own domain models, business logic, and data persistence strategies.","date":"2025-08-01T00:00:00.000Z","tags":[{"inline":false,"label":"Sharethrift","permalink":"/blog/tags/sharethrift","description":"Posts about the Sharethrift framework, architecture, and development practices"},{"inline":false,"label":"DDD","permalink":"/blog/tags/ddd","description":"Domain-Driven Design patterns, principles, and implementation strategies"}],"readingTime":0.32,"hasTruncateMarker":true,"authors":[{"name":"Patrick Gidich","title":"Sharethrift maintainer","url":"https://www.simnova.com","page":{"permalink":"/blog/authors/all-patrick-gidich-articles"},"socials":{"x":"https://x.com/simnova","linkedin":"https://www.linkedin.com/in/gidich/","github":"https://github.com/gidich","newsletter":"https://www.simnova.com"},"imageURL":"https://github.com/gidich.png","key":"gidich"}],"frontMatter":{"slug":"mdx-blog-post","title":"Bounded Contexts","authors":["gidich"],"tags":["sharethrift","ddd"]},"unlisted":false,"prevItem":{"title":"Welcome to Sharethrift","permalink":"/blog/welcome"},"nextItem":{"title":"Introducing Sharethrift","permalink":"/blog/first-blog-post"}},"content":"Sharethrift implements Domain-Driven Design through well-defined bounded contexts that separate different business concerns. Each context maintains its own domain models, business logic, and data persistence strategies.\\n\\n:::tip\\n\\nBounded contexts help prevent model confusion and enable teams to work independently on different business domains without conflicts.\\n\\n:::\\n\\n{/* truncate */}\\n\\nIn Sharethrift, we have several key bounded contexts such as Community, User, and Case management."},{"id":"first-blog-post","metadata":{"permalink":"/blog/first-blog-post","editUrl":"https://github.com/simnova/sharethrift/tree/main/packages/docs/blog/2024-05-28-first-blog-post.md","source":"@site/blog/2024-05-28-first-blog-post.md","title":"Introducing Sharethrift","description":"Welcome to Sharethrift, a Domain-Driven Design (DDD) monorepo built on Azure Functions with GraphQL/REST APIs and MongoDB persistence. This framework provides a modern approach to building scalable applications with clear separation of concerns.","date":"2024-05-28T00:00:00.000Z","tags":[{"inline":false,"label":"DDD","permalink":"/blog/tags/ddd","description":"Domain-Driven Design patterns, principles, and implementation strategies"},{"inline":false,"label":"Azure Functions","permalink":"/blog/tags/azure-functions","description":"Serverless computing with Azure Functions, deployment, and best practices"},{"inline":false,"label":"GraphQL","permalink":"/blog/tags/graphql","description":"GraphQL API development, schema design, and query optimization techniques"},{"inline":false,"label":"Sharethrift","permalink":"/blog/tags/sharethrift","description":"Posts about the Sharethrift framework, architecture, and development practices"}],"readingTime":0.41,"hasTruncateMarker":true,"authors":[{"name":"Patrick Gidich","title":"Sharethrift maintainer","url":"https://www.simnova.com","page":{"permalink":"/blog/authors/all-patrick-gidich-articles"},"socials":{"x":"https://x.com/simnova","linkedin":"https://www.linkedin.com/in/gidich/","github":"https://github.com/gidich","newsletter":"https://www.simnova.com"},"imageURL":"https://github.com/gidich.png","key":"gidich"},{"name":"Dhaval Heruwala","title":"Sharethrift core team","url":"https://linkedin.com/in/heruwala","page":{"permalink":"/blog/authors/heruwala"},"socials":{"x":"https://x.com/heruwala","linkedin":"https://www.linkedin.com/in/heruwala/","github":"https://github.com/heruwala","newsletter":"https://medium.com/@heruwala"},"imageURL":"https://github.com/heruwala.png","key":"heruwala"}],"frontMatter":{"slug":"first-blog-post","title":"Introducing Sharethrift","authors":["gidich","heruwala"],"tags":["ddd","azure-functions","graphql","sharethrift"]},"unlisted":false,"prevItem":{"title":"Bounded Contexts","permalink":"/blog/mdx-blog-post"}},"content":"Welcome to Sharethrift, a Domain-Driven Design (DDD) monorepo built on Azure Functions with GraphQL/REST APIs and MongoDB persistence. This framework provides a modern approach to building scalable applications with clear separation of concerns.\\n\\n\x3c!-- truncate --\x3e\\n\\nSharethrift implements a multi-layered architecture following strict DDD principles with bounded contexts for community management and user administration. The project includes specialized packages like `@ocom/api-domain` for business logic, `@ocom/api-graphql` for GraphQL implementation, and various service packages for MongoDB connectivity and observability."}]}}')}}]);